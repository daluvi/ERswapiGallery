{"version":3,"sources":["utils/constants.ts","SW_starsWar.ts"],"names":[],"mappings":"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","file":"SW_starsWar.js","sourceRoot":"../src","sourcesContent":["export const BASE_URL = 'https://swapi.dev/api';\nexport const BASE_URL_IMG = 'https://starwars-visualguide.com/assets/img';\nexport const MAX_RESULT_PER_PAGE = 10;\nexport const REGEX_MATCH_URL = /\\/{1}[\\w.-]*[/]?[=?.\\w]*[/]?$/;","import {REGEX_MATCH_URL} from \"./utils/constants\";\n\nconst CACHE_NAME = \"starsWarCache\";\nconst PRE_CACHED_RESOURCES = [\"/\"];\n\nself.addEventListener(\"install\", (event: ExtendableEvent) => {  \n  async function preCacheResources() {\n    const cache = await caches.open(CACHE_NAME);\n    cache.addAll(PRE_CACHED_RESOURCES);\n  }\n  event.waitUntil(preCacheResources());\n});\n\nself.addEventListener(\"activate\", () => caches.delete(CACHE_NAME));\nconst fromNetwork = async(request: Request, matchURL: RequestInfo) => await fetch(request).then(async(networkResponse) => {\n  const cache = await caches.open(CACHE_NAME);\n\n  cache.put(matchURL, networkResponse.clone());\n  return networkResponse;\n}).catch(e => {\n  console.log('network Error: ', e);\n});\n\nself.addEventListener(\"fetch\", (event: FetchEvent) => {\n  async function navigateOrDisplayOfflinePage() {\n    const cache = await caches.open(CACHE_NAME);\n    const matchURL: RequestInfo = event.request.url.match(REGEX_MATCH_URL) as unknown as RequestInfo;\n    return await cache.match(matchURL).then(async (matched) => {\n      return matched || await fromNetwork(event.request, matchURL) as unknown as Promise<Response>;\n    });\n  }\n  event.respondWith(navigateOrDisplayOfflinePage());\n});\n\n"]}