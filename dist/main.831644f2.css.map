{"version":3,"sources":["sass/_reset.scss","sass/_root.scss","sass/_utils.scss","static/main.scss"],"names":[],"mappings":"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","file":"main.831644f2.css","sourceRoot":"../src","sourcesContent":["html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n\n","@use 'sass:color';\n@import 'utils';\n\n:root{\n  --header-home-bg: var(--color-second);\n  --header-home-b: var(--color-sixteenth);\n\n  --navigation-btn-col-bg: var(--color-second);\n  --navigation-btn-col-b: var(--color-second);\n\n  --navigation-select-col-bg: var(--color-tenth);\n  --navigation-select-col-b: var(--color-second);\n  --navigation-select-col: var(--color-second);\n  \n  --card-col-b: var(--color-second);\n  --card-col-bg_front: var(--color-ninth);\n  --card-col-bg_back: var(--color-tenth);\n  --card-col_back: var(--color-eighth);\n  --card_col_btn-close: var(--color-eighth);\n  --card_col-bg_btn-close: var(--color-thirteenth);\n  --card_col-b_btn-close: var(--color-fourteenth);\n  \n  --body-col-bg: var(--color-first);\n  \n  --nav-link-col: var(--color-third);\n  --nav-link-col-b: var(--color-second);\n  \n  --nav-link-col_act: var(--color-second);\n  --nav-link-col_hov: var(--color-second);\n  --nav-link-col-bg_act: var(--color-fourth);\n  --nav-link-col-bg_hov: var(--color-fourth);\n  --nav-link-col-b_act: var(--color-fifth);\n  --nav-link-col-b_hov: var(--color-fifth);\n  --nav-link-col-b_dis: var(--color-sixth);\n  --nav-link-col_dis: var(--color-seventh);\n\n  --head-fourth-col: var(--color-eighth);\n  --head-sixth-col: var(--color-eleventh);\n  --head-sixth-col-sdw: var(--color-tenth);\n  --paragraph-col: var(--color-twelfth);\n  --paragraph-col-sdw: var(--color-tenth);\n  \n  --loading-col-bg_wrapper: var(--color-fifteenth);\n}\n\n$root: (\n  '[theme:default]': (\n    color: (\n      first: black,\n      second: color.mix(#00a86b, #dddddd),\n      third: color.mix(#00a86b, #ffffff),\n      fourth: color.mix(#00a86b, #777777),\n      fifth: color.mix(#00a86b, #bbbbbb),\n      sixth: color.mix(#00a86b, #feeeef),\n      seventh:color.mix(#00a86b, #feeeee),\n      eighth: color.mix(#00a86b, #ffffff),\n      ninth: color.mix(#00a86b, #ffffff),\n      tenth: color.mix(#00a86b, #333333),\n      eleventh:  color.mix(color.complement(#00a86b), #111),\n      twelfth:color.mix(color.complement(#00a86b), #333),\n      thirteenth: color.mix(#00a86b, #666666),\n      fourteenth: color.adjust(color.mix(#00a86b,#666666), $red: -81, $green: 5, $blue: 36),\n      fifteenth: color.change(black, $alpha: 80%),\n      sixteenth: color.change(white, $whiteness: 100%),\n    ),\n  ),\n  '[theme:blue]': (\n    color: (\n      first: black,\n      second: color.mix(#0000ff, #dddddd),\n      third: color.mix(#0000ff, #ffffff),\n      fourth: color.mix(#0000ff, #777777),\n      fifth: color.mix(#0000ff, #bbbbbb),\n      sixth: color.mix(#0000ff, #feeeef),\n      seventh:color.mix(#0000ff, #feeeee),\n      eighth: color.mix(#0000ff, #ffffff),\n      ninth: color.mix(#0000ff, #ffffff),\n      tenth: color.mix(#0000ff, #333333),\n      eleventh:  color.mix(color.invert(#0000ff), #111),\n      twelfth:color.mix(color.invert(#0000ff), #333),\n      thirteenth: color.mix(#0000ff, #666666),\n      fourteenth: color.adjust(color.mix(#0000ff,#666666), $red: -81, $green: 5, $blue: 36),\n      fifteenth: color.change(black, $alpha: 80%),\n      sixteenth: color.change(black, $whiteness: 100%),\n    )\n  ),\n  '[theme:red]': (\n    color: (\n      first: black,\n      second: color.mix(#ff1400, #dddddd),\n      third: color.mix(#ff1400, #ffffff),\n      fourth: color.mix(#ff1400, #777777),\n      fifth: color.mix(#ff1400, #bbbbbb),\n      sixth: color.mix(#ff1400, #feeeef),\n      seventh:color.mix(#ff1400, #feeeee),\n      eighth: color.mix(#ff1400, #ffffff),\n      ninth: color.mix(#ff1400, #ffffff),\n      tenth: color.mix(#ff1400, #333333),\n      eleventh:  color.mix(color.invert(#ff1400), #111),\n      twelfth:color.mix(color.invert(#ff1400), #333),\n      thirteenth: color.mix(#ff1400, #666666),\n      fourteenth: color.adjust(color.mix(#ff1400,#666666), $red: -81, $green: 5, $blue: 36),\n      fifteenth: color.change(black, $alpha: 80%),\n      sixteenth: color.change(black, $whiteness: 100%),\n    )\n  ),\n  '[theme:yellow]': (\n    color: (\n      first: black,\n      second: color.mix(#EFFD5F, #dddddd),\n      third: color.mix(#EFFD5F, #ffffff),\n      fourth: color.mix(#EFFD5F, #777777),\n      fifth: color.mix(#EFFD5F, #bbbbbb),\n      sixth: color.mix(#EFFD5F, #feeeef),\n      seventh:color.mix(#EFFD5F, #feeeee),\n      eighth: color.mix(#EFFD5F, #ffffff),\n      ninth: color.mix(#EFFD5F, #ffffff),\n      tenth: color.mix(#EFFD5F, #333333),\n      eleventh:  color.mix(color.invert(#EFFD5F), #111),\n      twelfth:color.mix(color.invert(#EFFD5F), #333),\n      thirteenth: color.mix(#EFFD5F, #666666),\n      fourteenth: color.adjust(color.mix(#EFFD5F,#666666), $red: -81, $green: 5, $blue: 36),\n      fifteenth: color.change(black, $alpha: 80%),\n      sixteenth: color.change(black, $whiteness: 100%),\n    )\n  ),\n  '[theme:orange]': (\n    color: (\n      first: black,\n      second: color.mix(#ffbf34, #dddddd),\n      third: color.mix(#ffbf34, #ffffff),\n      fourth: color.mix(#ffbf34, #777777),\n      fifth: color.mix(#ffbf34, #bbbbbb),\n      sixth: color.mix(#ffbf34, #feeeef),\n      seventh:color.mix(#ffbf34, #feeeee),\n      eighth: color.mix(#ffbf34, #ffffff),\n      ninth: color.mix(#ffbf34, #ffffff),\n      tenth: color.mix(#ffbf34, #333333),\n      eleventh:  color.mix(color.invert(#ffbf34), #111),\n      twelfth:color.mix(color.invert(#ffbf34), #333),\n      thirteenth: color.mix(#ffbf34, #666666),\n      fourteenth: color.adjust(color.mix(#ffbf34,#666666), $red: -81, $green: 5, $blue: 36),\n      fifteenth: color.change(black, $alpha: 80%),\n      sixteenth: color.change(black, $whiteness: 100%),\n    )\n  ),\n  '[theme:golden]': (\n    color: (\n      first: black,\n      second: color.mix(#FFD700, #dddddd),\n      third: color.mix(#FFD700, #ffffff),\n      fourth: color.mix(#FFD700, #777777),\n      fifth: color.mix(#FFD700, #bbbbbb),\n      sixth: color.mix(#FFD700, #feeeef),\n      seventh:color.mix(#FFD700, #feeeee),\n      eighth: color.mix(#FFD700, #ffffff),\n      ninth: color.mix(#FFD700, #ffffff),\n      tenth: color.mix(#FFD700, #333333),\n      eleventh:  color.mix(color.invert(#FFD700), #111),\n      twelfth:color.mix(color.invert(#FFD700), #333),\n      thirteenth: color.mix(#FFD700, #666666),\n      fourteenth: color.adjust(color.mix(#FFD700,#666666), $red: -81, $green: 5, $blue: 36),\n      fifteenth: color.change(black, $alpha: 80%),\n      sixteenth: color.change(black, $whiteness: 100%),\n    )\n  ),\n  '[theme:silvery]': (\n    color: (\n      first: black,\n      second: color.mix(#e3e4e5, #dddddd),\n      third: color.mix(#e3e4e5, #ffffff),\n      fourth: color.mix(#e3e4e5, #777777),\n      fifth: color.mix(#e3e4e5, #bbbbbb),\n      sixth: color.mix(#e3e4e5, #feeeef),\n      seventh:color.mix(#e3e4e5, #feeeee),\n      eighth: color.mix(#e3e4e5, #ffffff),\n      ninth: color.mix(#e3e4e5, #ffffff),\n      tenth: color.mix(#e3e4e5, #333333),\n      eleventh:  color.mix(color.invert(#e3e4e5), #111),\n      twelfth:color.mix(color.invert(#e3e4e5), #333),\n      thirteenth: color.mix(#e3e4e5, #666666),\n      fourteenth: color.adjust(color.mix(#e3e4e5,#666666), $red: -81, $green: 5, $blue: 36),\n      fifteenth: color.change(black, $alpha: 80%),\n      sixteenth: color.change(black, $whiteness: 100%),\n    )\n  ),\n  '[theme:white]': (\n    color: (\n      first: black,\n      second: color.mix(#F9FEFF, #dddddd),\n      third: color.mix(#F9FEFF, #ffffff),\n      fourth: color.mix(#F9FEFF, #777777),\n      fifth: color.mix(#F9FEFF, #bbbbbb),\n      sixth: color.mix(#F9FEFF, #feeeef),\n      seventh:color.mix(#F9FEFF, #feeeee),\n      eighth: color.mix(#F9FEFF, #ffffff),\n      ninth: color.mix(#F9FEFF, #ffffff),\n      tenth: color.mix(#F9FEFF, #ffffff),\n      eleventh:  color.mix(color.invert(#F9FEFF), #111),\n      twelfth:color.mix(color.invert(#F9FEFF), #333),\n      thirteenth: color.mix(#F9FEFF, #666666),\n      fourteenth: color.adjust(color.mix(#F9FEFF,#666666), $red: -81, $green: 5, $blue: 36),\n      fifteenth: color.change(black, $alpha: 80%),\n      sixteenth: color.change(black, $whiteness: 100%),\n    )\n  ),\n  '[theme:purplish]': (\n    color: (\n      first: black,\n      second: color.mix(#4B0082, #dddddd),\n      third: color.mix(#4B0082, #ffffff),\n      fourth: color.mix(#4B0082, #777777),\n      fifth: color.mix(#4B0082, #bbbbbb),\n      sixth: color.mix(#4B0082, #feeeef),\n      seventh:color.mix(#4B0082, #feeeee),\n      eighth: color.mix(#4B0082, #ffffff),\n      ninth: color.mix(#4B0082, #ffffff),\n      tenth: color.mix(#4B0082, #333333),\n      eleventh:  color.mix(color.invert(#4B0082), #111),\n      twelfth:color.mix(color.invert(#4B0082), #333),\n      thirteenth: color.mix(#4B0082, #666666),\n      fourteenth: color.adjust(color.mix(#4B0082,#666666), $red: -81, $green: 5, $blue: 36),\n      fifteenth: color.change(black, $alpha: 80%),\n      sixteenth: color.change(black, $whiteness: 100%),\n    )\n  ),\n  '[theme:black]': (\n    color: (\n      first: black,\n      second: color.mix(#151922, #dddddd),\n      third: color.mix(#151922, #ffffff),\n      fourth: color.mix(#151922, #777777),\n      fifth: color.mix(#151922, #bbbbbb),\n      sixth: color.mix(#151922, #feeeef),\n      seventh:color.mix(#151922, #feeeee),\n      eighth: color.mix(#151922, #ffffff),\n      ninth: color.mix(#151922, #ffffff),\n      tenth: color.mix(#151922, #333333),\n      eleventh:  color.mix(color.invert(#151922), #111),\n      twelfth:color.mix(color.invert(#151922), #333),\n      thirteenth: color.mix(#151922, #666666),\n      fourteenth: color.adjust(color.mix(#151922,#666666), $red: -81, $green: 5, $blue: 36),\n      fifteenth: color.change(black, $alpha: 80%),\n      sixteenth: color.change(black, $whiteness: 100%),\n    )\n  ),\n);\n\n@include create-roots($root);\n\n","\n@use \"sass:string\";\n@use 'sass:list';\n@use 'sass:map';\n\n@function str-remove-whitespace($str) {\n  @while (str-index($str, ' ') != null) {\n    $index: str-index($str, ' ');\n    $str: \"#{str-slice($str, 0, $index - 1)}#{str-slice($str, $index + 1)}\";\n  }\n  @return $str;\n}\n\n@function str-replace($string, $search, $replace: '') {\n  $index: str-index($string, $search);\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n  @return $string;\n}\n\n@function get-property($rule) {\n  @if type-of($rule) == 'string' {\n    $rule: str-replace($rule, ';');\n    @return list.nth(string.split($rule, ':'), 1);\n  } @else {\n    @return null;\n  }\n}\n\n@function get-value($rule) {\n  @if type-of($rule) == 'string' {\n    $rule: str-replace($rule, ';');\n    @return list.nth(string.split($rule, ':'), 2);\n  } @else {\n    @return null;\n  }\n}\n\n@function get-instruction($value) {\n  @if str-index($value, \"[\") != null {\n    $value: str-replace($value, \"[\");\n    $value: str-replace($value, \"]\");\n    @return $value;\n  } @else {\n    @return null;\n  }\n}\n\n@function destructuring-map($map, $preComposition: '', $attrName: '') {\n  $list: ();\n  $instruction: get-instruction($attrName);\n  \n  $composition: '';\n  @if $instruction != null {\n    $list: list.append($list, ($instruction, destructuring-map($map, $preComposition)));\n  } @else {\n    @if $attrName == '' {\n      $composition: #{$preComposition};\n    } @else {\n      $composition: #{$preComposition+'-'+$attrName};  \n    }\n\n    @each $name, $value in $map {    \n      @if type-of($map) == 'map' {\n        $list: list.join($list, destructuring-map($value, $composition, $name));\n      } @else {\n        $list: list.append($list, ('-'+#{$composition}, $map));\n      };\n    }\n  }\n\n  @return $list;\n}\n\n@function GV($map: (), $expression: '') {\n  // purpose: get a value of map sass\n  // EX: \n  //    $root: (\n  //      '[theme:default]': (\n  //        color: (\n  //          first: black,\n  //        ),\n  //      ),\n  //    );\n  //    $result: GV($root, \"[theme:default].color.first\");\n  //    @debug $result; --> black\n  $list: string.split($expression, '.');\n\n  @if list.length($list) > 1 {\n    @each $v in $list {\n      $map: GV($map, $v);\n    }\n  } @else {\n    @return map.get($map, $expression);\n  }\n  \n  @return $map;\n}\n\n@mixin print-declaration($value) {\n  @each $n, $v in $value {\n    @if str-index($n, ':'){\n      $p: get-property($n);\n      $w: get-value($n);\n      @if $p == 'functions'  {\n        @each $m, $x in $v {\n          #{$m}: #{$w}($x)\n        }\n      }\n    } @else {\n      #{$n}: #{$v};\n    }\n  }\n}\n\n@mixin create-roots($map) {\n  $values: destructuring-map($map);\n  $list: ();\n  @each $name, $value in $values {\n    @if str-index($name, ':'){\n      $prop: get-property($name);\n      $val: get-value($name);\n      @if $prop == 'theme' {\n        @if $val != 'default' {\n          :root[theme=#{$val}] {  \n            @include print-declaration($value);\n          }\n        } @else {\n          :root {\n            @include print-declaration($value);\n          }\n        }\n      }\n    } @else {\n      $list: list.append($list, (#{$name} #{$value}));\n    }\n  }\n  @if list.length($list) > 0 {\n    :root {\n      @each $name, $value in $list {\n        #{$name}: #{$value}\n      }\n    }\n  }\n}\n\n","@import 'media-queries';\n@import 'reset';\n@import 'root';\n\narticle { \n\tdisplay: grid;\n\twidth: 100%;\n\tgrid-template-columns: auto auto auto auto;\n\tgap: 20px;\n\tjustify-content: center;\n}\nsection {\n\tdisplay: flex;\n\tjustify-content: center;\n\t\n}\nfigure {max-width: 100%;}\nfigure img {max-width: 100%; height: fit-content;}\nfigcaption {\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\tflex-direction: column;\n\tpadding: 3%;\n}\n\n.card, .card-home {\n\tborder: 1px solid var(--card-col-b);\n\tbox-shadow: 0px 0px 7px var(--card-col-b);\n\ta {text-decoration: none;}\n}\n\nbody{background-color: var(--body-col-bg); font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; font-size: 14px;}\ncanvas {position: sticky; top: 0; height: 100vh; width: 100%;}\n\n#app {\n\theight: 100%;\n\tdisplay: grid;\n\tgap: 15px;\n\tpadding: 42px 0px 35px 0px;\n\twidth: 100%;\n\tposition: relative;\n\tz-index: 7;\n\tmargin-top: -100.2vh;\n}\n\nh4 {color: var(--head-fourth-col); font-weight: bold;}\n\n.flip-card {\n  background-color: transparent;\n  width: 400px;\n  perspective: 1000px;\n\t\n  .inner {\n    position: relative;\n    width: 100%;\n    height: 0%;\n    transition: transform 0.8s;\n    transform-style: preserve-3d;\n\t\tpadding-top: 137.5%;\n\n    .front,\n    .back {\n      position: absolute;\n      top: 0;\n\t\t\tleft: 0;\n      height: 100%;\n      -webkit-backface-visibility: hidden;\n      backface-visibility: hidden;\n      display: flex;\n      align-items: center;\n      justify-content: flex-start;\n      flex-direction: column;\n    }\n    .front {\n\t\t\twidth: 100%;\n      background-color: var(--card-col-bg_front);\n    }\n    .back {\n\t\t\twidth: 88%;\n\t\t\tpadding: 0 6%;\n      background-color: var(--card-col-bg_back);\n      color: var(--card-col_back);\n      transform: rotateY(180deg);\n\t\t\tjustify-content: flex-start;\n    \toverflow-y: auto;\n\t\t\th6 {padding-bottom: 1%; color: var(--head-sixth-col); text-shadow: 1px 1px 3px var(--head-sixth-col-sdw); font-weight: bold;}\n\t\t\tp {color: var(--paragraph-col); text-shadow: 1px 1px 3px var(--paragraph-col-sdw);\n\t\t\t\tstrong{font-weight: bold;}\n\t\t\t}\n\t\t\t& button{\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 0;\n\t\t\t\ttop: 0;\n\t\t\t\tbackground-color: transparent;\n\t\t\t\tborder: none;\n\t\t\t\tcolor: var(--card_col_btn-close);\n\t\t\t\tbackground-color: var(--card_col-bg_btn-close);\n\t\t\t\twidth: 25px;\n\t\t\t\theight: 25px;\n\t\t\t\tborder-radius: 5px;\n\t\t\t\tborder-top-right-radius: 0px;\n\t\t\t\tborder: 1px solid;\n\t\t\t\tborder-color: var(--card_col-b_btn-close);\n\t\t\t}\n\t\t\t.info {\n\t\t\t\tmargin-top: 4%;\n\t\t\t\tdisplay: flex;\n\t\t\t\tpadding-bottom: 2%;\n\t\t\t\tflex-wrap: wrap;\n\t\t\t\tjustify-content: space-between;\n\n\t\t\t\t.feature {\n\t\t\t\t\twidth: 98%;\n\t\t\t\t\tpadding: 0 2% 1%;\n\t\t\t\t  display: flex;\n\t\t\t\t  justify-content: space-between;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.list-feature {\n\t\t\t\twidth: 100%;\n\t\t\t\tpadding-bottom: 2%;\n\t\t\t\t.info{\n\t\t\t\t\tmargin-top: 2%;\n\t\t\t\t\twidth: 96%;\n\t\t\t\t\tpadding: 0 2% 1%;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\tflex-wrap: nowrap;\n\t\t\t\t}\n\t\t\t\t.feature {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tpadding-left: 5%;\n\t\t\t\t\t\n\t\t\t\t\tp {\n\t\t\t\t\t\tdisplay: inline-flex;\n\t\t\t\t\t\twidth: 48%;\n\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\tpadding: 0 1%;\n\n\t\t\t\t\t\t& strong {\n\t\t\t\t\t\t\tdisplay: inline-flex;\n\t\t\t\t\t\t\talign-items: flex-start;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n    }\n\t\t&.flip {\n\t\t\ttransform: rotateY(180deg);\n\t\t}\n  }\n\t\n}\n\n.loading-wrapper {\n\tdisplay: none;\n\tposition: absolute;\n\tz-index: 1;\n\tbackground-color: transparent;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100vh;\n\ttransition: background-color 1s;\n\t.loading-item{\n\t\twidth: 45px;\n    height: 50px;\n    background: transparent url('./bb8.webp') no-repeat right top;\n    background-size: cover;\n\t}\n\t&.loading{\n\t\tdisplay: flex;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tbackground-color:  var(--loading-col-bg_wrapper);\n\t\t\n\t}\n}\n\n@media screen and (max-width: 1669px) {\n\tarticle {\n\t\tgrid-template-columns: auto auto auto;\n\t}\n}\n\n@media screen and (max-width: 1268px) {\n\tarticle {\n\t\tgrid-template-columns: auto auto;\n\t}\n}\n\n@media screen and (max-width: 848px) {\n\tarticle {\n\t\tgrid-template-columns: auto;\n\t}\n\n\t.flip-card {\n\t\t.inner{\n\t\t\t.back{\n\t\t\t\tpadding: 0 9% 0 3%;\n\t\t\t\tbutton{width: 35px; height: 35px;}\n\t\t\t}\n\t\t}\n\t}\n}\n\n@media screen and (max-width: 430px) {\n\tnav {margin: 0 5px;\n\t\t&>div{display: flex; flex-wrap: wrap; justify-content: center;\n\t\t\t&:nth-child(2){\n\t\t\t\twidth: calc(98% - 159px);\n\t\t\t\toverflow: hidden;\n\t\t\t\tmargin: 0 1%;\n\t\t\t\tmax-height: 32px;\n\t\t\t\ta {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\ta:has(+[class~='active']) {\n\t\t\t\t\tdisplay: inline;\n\t\t\t\t\tborder-right-width: 0px;\n\t\t\t\t\tborder-left-width: 1px;\n\t\t\t\t\tborder-top-left-radius: 10px;\n\t\t\t\t\tborder-bottom-left-radius: 10px;\n\t\t\t\t}\n\t\t\t\ta[class~='active']+a {\n\t\t\t\t\tdisplay: inline;\n\t\t\t\t\tborder-left-width: 0px;\n\t\t\t\t\tborder-right-width: 1px;\n\t\t\t\t\tborder-top-right-radius: 10px;\n\t\t\t\t\tborder-bottom-right-radius: 10px;\n\t\t\t\t}\n\t\t\t\ta[class~='active']{\n\t\t\t\t\tdisplay: inline;\n\t\t\t\t\tborder-right-width: 1px;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\tarticle {\n\t\tgrid-template-columns: 100%;\n\t}\n\tsection {margin: 0 5px;}\n\t.flip-card {\n\t\twidth: 100%;\n\t\tmax-width: 400px;\n\t}\n}\n\n@media screen and (max-width: 410px) {\n\tnav {margin: 0 5px;}\n\tarticle {\n\t\tgrid-template-columns: 100%;\n\t}\n\tsection {margin: 0 5px;}\n}\n"]}